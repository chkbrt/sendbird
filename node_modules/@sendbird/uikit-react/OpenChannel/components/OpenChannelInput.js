import React__default, { useContext } from 'react';
import { L as LocalizationContext } from '../../chunks/bundle-BvAzWVA5.js';
import MessageInput from '../../ui/MessageInput.js';
import { u as useOpenChannelContext } from '../../chunks/bundle-v7PcSk1i.js';
import '../../chunks/bundle-B1SLZ0HT.js';
import '../../chunks/bundle-D2Fmzffb.js';
import '../../chunks/bundle-kNaMXwgI.js';
import '../../chunks/bundle-DcNHBjGp.js';
import '../../chunks/bundle-DHJZgVZH.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../chunks/bundle-CEZ0D4qz.js';
import '../../chunks/bundle-BGQ77Eco.js';
import 'dompurify';
import '../../chunks/bundle-i2i0G-ml.js';
import '../../chunks/bundle-BVBoUWl2.js';
import '../../chunks/bundle-fSuFm2tD.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-CtBgdgkK.js';
import '../../useSendbirdStateContext.js';
import '../../withSendbird.js';
import '../../chunks/bundle-D-cVbGxk.js';
import '@sendbird/chat/groupChannel';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-DJDeBhDz.js';
import '../../chunks/bundle-CwQYOWqR.js';
import '../../chunks/bundle-DtlqJEe7.js';
import '../../chunks/bundle-BKxPk2t0.js';
import '../../chunks/bundle-BKe5KBuS.js';
import '../../chunks/bundle-DZhG3Z6D.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';
import '../../chunks/bundle-Cvt9FZvn.js';
import '../../chunks/bundle-DM6QiOiG.js';
import '../../chunks/bundle-DYIdeEpd.js';
import '../../chunks/bundle-Bh6KfMRl.js';
import 'react-dom';
import '../../chunks/bundle-DBzinRyn.js';
import '@sendbird/uikit-tools';
import 'css-vars-ponyfill';
import '../../chunks/bundle-DO8nji3n.js';
import '../../chunks/bundle-c4e24Qt4.js';
import '../../chunks/bundle-C7VSBUKJ.js';
import '../../ui/SortByRow.js';

var OpenChannelInput = React__default.forwardRef(function (props, ref) {
    var _a = useOpenChannelContext(), currentOpenChannel = _a.currentOpenChannel, disabled = _a.disabled, handleSendMessage = _a.handleSendMessage, handleFileUpload = _a.handleFileUpload, amIMuted = _a.amIMuted;
    var channel = currentOpenChannel;
    var stringSet = useContext(LocalizationContext).stringSet;
    var value = props.value;
    function getPlaceHolderString() {
        if (amIMuted) {
            return stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED;
        }
        if (disabled) {
            return stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED;
        }
        return '';
    }
    if (!channel) {
        return null;
    }
    return (React__default.createElement("div", { className: "sendbird-openchannel-footer" },
        React__default.createElement(MessageInput, { channel: currentOpenChannel, ref: ref, value: value, disabled: disabled, isVoiceMessageEnabled: false, onSendMessage: handleSendMessage, onFileUpload: handleFileUpload, placeholder: getPlaceHolderString() })));
});

export { OpenChannelInput as default };
//# sourceMappingURL=OpenChannelInput.js.map
